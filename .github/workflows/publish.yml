name: Publish BDM Resources to ALM
run-name: Publish BDM Resources to ALM for ${{ inputs.realmName }}
on:
  workflow_dispatch:
    inputs:
      realmName:
        type: string
        description: Name of the LIAM Realm
        required: true
      realmId:
        type: string
        description: ID of the LIAM Realm
        required: true
      geography:
        type: string
        description: Environment Deployment Zone(eg. us, eu, apac)
        required: true
      size:
        type: string
        description: Environment Size(eg. Dev)
        required: true
      jpowerId:
        required: true
        type: string
        description: JPowerID
      customerId:
        required: true
        type: string
        description: Realm Customer ID
      envType:
        required: true
        description: Environment Type (Demo⇒pldena,PSR⇒pltpsr,Pilot⇒plpprvna,Non-Prod⇒plpstgna,Prod⇒plp##,Dev⇒pltna)
        type: choice
        default: Dev
        options:
          - Demo
          - PSR
          - Pilot
          - Non-Prod
          - Prod
          - Dev
      templateName:
        required: true
        type: string
        description: Template Name to be used
      keyVaultURL:
        required: true
        type: string
        description: Key Vault URL to get Client Credential
        default: "https://o67wh6yaleseujavasbb39k7.vault.azure.net"
      startingStepName:
        required: false
        type: string
        description: Optional Name of the step where the workflow needs to be started.
        default: NONE

  workflow_call:
    inputs:
      realmName:
        type: string
        description: Name of the LIAM Realm to onboard to
        required: true
      realmId:
        type: string
        description: ID of the LIAM Realm to onboard to
        required: true
      geography:
        type: string
        description: Environment Deployment Zone
        required: true
      size:
        type: string
        description: Environment Size
        required: true
      # costCenter:
      #   type: string
      #   description: Cost Center
      #   required: false
      #   default: "474000"
      jpowerId:
        required: true
        type: string
        description: JPowerID
      customerId:
        required: true
        type: string
        description: Realm Customer ID
      envType:
        required: true
        type: string
        description: Environment Type
      templateName:
        required: true
        type: string
        description: Template Name to be used
      keyVaultURL:
        required: true
        type: string
        description: Key Vault URL to get Clinet Credential
      startingStepName:
        required: false
        type: string
        description: Optional Name of the step where the workflow needs to be started.
        default: NONE

defaults:
  run:
    shell: pwsh
jobs:
  get_by_env:
    runs-on: ubuntu-latest
    outputs:
      byenv: ${{ steps.get_by_env.outputs.byenv }}
    steps:
      - name: Get BY Env
        id: get_by_env
        uses: BY-Product-Development/plan-abp-automation/.github/actions/get_by_env@gha-latest
        with:
          geography: ${{ inputs.geography }}
          envType: ${{ inputs.envType }}
      - name: Echo Output
        id: echo_output
        run: |
          Write-Output ${{ steps.get_by_env.outputs.byenv }}

  Publish_BDM_Resources:
    runs-on: ubuntu-latest
    needs: get_by_env
    environment: ${{ needs.get_by_env.outputs.byenv }}
    steps:
      - name: Echo Input
        id: echo_input
        run: |
          Write-Output "realmName: [${{ inputs.realmName }}]"
          Write-Output "realmId: [${{ inputs.realmId }}]"
          Write-Output "geography: [${{ inputs.geography }}]"
          Write-Output "envType: [${{ inputs.envType }}]"
          Write-Output "size: [${{ inputs.size }}]"
          Write-Output "costCenter: [474000]"
          Write-Output "jpowerId: [${{ inputs.jpowerId }}]"
          Write-Output "customerId: [${{ inputs.customerId }}]"
          Write-Output "templateName: [${{ inputs.templateName }}]"
          Write-Output "Key Vault Name: [${{ inputs.keyVaultURL }}]"
          Write-Output "Starting Step Name: [${{ inputs.startingStepName }}]"

      - name: Invoke Get Starting Step
        id: get_step_value
        uses: BY-Product-Development/plan-abp-automation/.github/actions/get_starting_step@gha-latest
        with:
          starting_step_name: ${{ inputs.startingStepName }}

      - name: Check out repository code
        uses: actions/checkout@v4.1.1

      - name: Setting up BY Script
        uses: BY-Product-Development/plan-abp-automation/.github/actions/setup_by_script@gha-latest

      - name: Create Realm Credential
        uses: BY-Product-Development/plan-abp-automation/.github/actions/apply_aep_parameter@gha-latest
        with:
          stratosphere_client_id: ${{ secrets.SX_CBP_DEVOPS_CLIENT_ID }}
          stratosphere_client_secret: ${{ secrets.SX_CBP_DEVOPS_CLIENT_SECRET }}
          realm_name: ${{ inputs.realmName }}
          realm_id: ${{ inputs.realmId }}
          customer_id: ${{ inputs.customerId }}
          jpower_id: ${{ inputs.jpowerId }}
          env_type: ${{ inputs.envType }}
          geography: ${{ inputs.geography }}
          size: ${{ inputs.size }}
          costCenter: 474000
          by_env: ${{ needs.get_by_env.outputs.byenv }}
          key_vault_url: ${{ inputs.keyVaultURL }}
          alt_key_vault_name: ${{ vars.SX_CBP_DEVOPS_KV_NAME }}
          stratosphere_api_url: ${{ vars.STRATOSPHERE_API_URL }}
          stratosphere_auth_url: ${{ vars.STRATOSPHERE_AUTH_URL }}

      - name: Check out Realm Repository
        uses: BY-Product-Development/plan-abp-automation/.github/actions/checkout_realm_repository@gha-latest
        with:
          automation_token: ${{ secrets.AUTOMATION_PAT_TOKEN }}

      - name: Setup Realm Folder
        id: setup_realm_folder
        run: |
          New-Item -Force -Path ${{ github.workspace }} -Name 'realms/${{ inputs.realmName }}/realm_info' -Type Directory 
          Get-ChildItem ${{ github.workspace }}
          Copy-Item -Force -Verbose realm_${{ inputs.realmName }}_info.json -Destination ${{ github.workspace }}/realms/${{ inputs.realmName }}/realm_info/realm_info.json

      - name: Create Credential
        uses: BY-Product-Development/plan-abp-automation/.github/actions/setup_credential_files@gha-latest
        with:
          realm_credential: ${{ secrets.LIAM_CREDENTIAL }}
          snowflake_environment: ${{ secrets.SF_CONTEXT }}
          snowflake_private_key: ${{ secrets.SF_RSA_KEY }}

      - name: Create Meta Data
        id: create_meta_data
        uses: BY-Product-Development/plan-abp-automation/.github/actions/create_meta_data@gha-latest
        with:
          realm_name: ${{ inputs.realmName }}
          geography: ${{ inputs.geography }}
          output_folder: bdm

      - name: Publish BDM Resources
        uses: BY-Product-Development/plan-abp-automation/.github/actions/publish_bdm_resources@gha-latest
        with:
          realm_name: ${{ inputs.realmName }}
          realm_credential_path: ${{ inputs.realmName }}.postman_environment.json
          output_folder: bdm

      - name: Make Resource Public
        uses: BY-Product-Development/plan-abp-automation/.github/actions/make_resource_public@gha-latest
        with:
          realm_name: ${{ inputs.realmName }}
          realm_credential_path: ${{ inputs.realmName }}.postman_environment.json
          output_folder: bdm
        continue-on-error: true

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: bdm
          path: |
            ${{ github.workspace }}/bdm
          overwrite: true
          retention-days: 30
