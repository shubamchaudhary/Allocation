name: Publish Allocation Data (Test Version)
run-name: Test Publish Allocation Data for ${{ inputs.source_realm }}
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - dev
          - interop
          - psr
          - demo
        default: dev
      source_realm:
        description: "Source realm to export data from"
        required: true
        type: string
      target_realm:
        description: "Target realm for reference (metadata only)"
        required: true
        type: string
      planningInstanceId:
        description: "Planning instance ID"
        required: true
        type: string
  workflow_call:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: string
      source_realm:
        description: "Source realm to export data from"
        required: true
        type: string
      target_realm:
        description: "Target realm for reference (metadata only)"
        required: true
        type: string
      planningInstanceId:
        description: "Planning instance ID"
        required: true
        type: string

defaults:
  run:
    shell: pwsh
jobs:
  Publish_Allocation_Resources:
    runs-on: ubuntu-latest
    # No actual environment needed for testing
    # environment: ${{ inputs.environment }}
    steps:
      - name: Echo Input Parameters
        id: echo_input
        run: |
          Write-Output "Environment: [${{ inputs.environment }}]"
          Write-Output "Source Realm: [${{ inputs.source_realm }}]"
          Write-Output "Target Realm: [${{ inputs.target_realm }}]"
          Write-Output "Planning Instance ID: [${{ inputs.planningInstanceId }}]"

      - name: Check out repository code
        uses: actions/checkout@v4.1.1

      # Skipping JDK setup for test version
      # - name: Setup Java JDK
      #   uses: actions/setup-java@v3.13.0
      #   with:
      #     distribution: "temurin"
      #     java-version: "17"

      # Using the current repository instead of a private one
      - name: Setup Testing Directory
        id: setup_test_dir
        run: |
          New-Item -Force -Path "test-realms/${{ inputs.source_realm }}/allocation_export" -Type Directory 
          Write-Output "Created folder structure for source realm ${{ inputs.source_realm }}"

      - name: Mock Export Allocation Data
        run: |
          # Create mock data files
          New-Item -Path "mock-data" -ItemType Directory -Force
          
          # Create sample allocation data files
          @"
          {
            "id": "alloc1",
            "name": "Test Allocation 1",
            "planningInstanceId": "${{ inputs.planningInstanceId }}",
            "status": "ACTIVE"
          }
          "@ | Out-File -FilePath "mock-data/allocations.json" -Encoding utf8
          
          @"
          {
            "id": "res1",
            "name": "Resource 1",
            "type": "HUMAN"
          }
          "@ | Out-File -FilePath "mock-data/resources.json" -Encoding utf8
          
          @"
          {
            "id": "map1",
            "allocationId": "alloc1",
            "resourceId": "res1",
            "percentage": 50
          }
          "@ | Out-File -FilePath "mock-data/resource_maps.json" -Encoding utf8
          
          # Create a zip file
          Compress-Archive -Path "mock-data/*" -DestinationPath "exported-tables.zip" -Force
          
          # Verify the export file was created
          if (!(Test-Path "exported-tables.zip")) {
            Write-Error "Failed to create mock allocation data - exported-tables.zip not created"
            exit 1
          }
          
          Write-Output "Successfully created mock allocation data for realm ${{ inputs.source_realm }}"
          
          # Copy files to realm repository
          Copy-Item -Force -Recurse "mock-data/*" -Destination "test-realms/${{ inputs.source_realm }}/allocation_export/"
          
          # Clean up
          Remove-Item -Recurse -Force "mock-data"

      - name: Mock Commit and Push Changes
        run: |
          Write-Output "Simulating git operations:"
          Write-Output "git config user.name 'GitHub Action'"
          Write-Output "git config user.email 'action@github.com'"
          Write-Output "git add test-realms/${{ inputs.source_realm }}/allocation_export/*"
          Write-Output "git commit -m 'Export allocation data for realm ${{ inputs.source_realm }}'"
          Write-Output "git push"
          
          # No actual git operations for testing

      - name: Upload Exported Data as Artifact
        uses: actions/upload-artifact@v4.1.0
        with:
          name: allocation-export-${{ inputs.source_realm }}
          path: exported-tables.zip
          retention-days: 1  # Short retention for testing
